title: law-archive-data
about: hueyy/law-archive-data
about_url: https://github.com/hueyy/law-archive-data
description_html: |-
  <div>
    <p>law-archive-data provides Singapore legal data in machine-readable form</p>

    <h2>Browse dashboards</h2>
    <ul class="bullets">
      <li><a href="/-/dashboards/senior_counsel">Senior Counsel</a></li>
      <li><a href="/-/dashboards/pdpa">PDPA Enforcement Statistics</a></li>
    </ul>

    <h2>API</h2>
    <p>
      There is a JSON API for each table, e.g. <a href="/data/sc.json">/data/sc.json</a>.
      See <a href="https://docs.datasette.io/en/stable/json_api.html">the Datasette documentation</a> for more details.
    </p>

    <h2>Databases</h2>
    <p>Alternatively, explore the data directly:</p>
  </div>
databases:
  data:
    tables:
      commits:
        hidden: true
        allow: false
      namespaces:
        hidden: true
        allow: false
      columns:
        hidden: true
        allow: false
      hearings:
        source: judiciary.gov.sg/hearing-list
        source_url: https://www.judiciary.gov.sg/hearing-list
        sort_desc: timestamp
      hearings_changed:
        hidden: true
      hearings_version:
        hidden: true
      lss_dt_reports:
        source: lawgazette.com.sg
        source_url: https://lawgazette.com.sg/category/notices/disciplinary-tribunal-reports
        sort_desc: timestamp
      lss_dt_reports_changed:
        hidden: true
      lss_dt_reports_version:
        hidden: true
      pdpc_decisions:
        source: pdpc.gov.sg/All-Commissions-Decisions
        source_url: https://www.pdpc.gov.sg/All-Commissions-Decisions
        sort_desc: timestamp
      pdpc_decisions_changed:
        hidden: true
      pdpc_undertakings:
        source: pdpc.gov.sg/Undertakings
        source_url: https://www.pdpc.gov.sg/Undertakings
        sort_desc: timestamp
      pdpc_decisions_version:
        hidden: true
      pdpc_undertakings_changed:
        hidden: true
      pdpc_undertakings_version: 
        hidden: true
      sc:
        source: sal.org.sg/Services/Appointments/Senior-Counsel/Directory
        source_url: https://www.sal.org.sg/Services/Appointments/Senior-Counsel/Directory
        sort_desc: appointment-date
      sc_changed:
        hidden: true
      sc_version:
        hidden: true
    queries:
plugins:
  datasette-dashboards:
    senior_counsel:
      title: Senior Counsel Statistics
      settings:
        allow_fullscreen: true
      layout:
        - [sc-count, latest-scs, sc-time, sc-time]
        - [sc-organisation, sc-organisation, sc-organisation, sc-organisation]
        - [sc-titles, sc-titles, sc-titles, sc-deceased]
      charts:
        sc-count:
          title: Total number of SCs
          db: data
          query: SELECT count(*) AS count FROM sc
          library: metric
          display:
            field: count
            prefix:
            suffix:
        latest-scs:
          title: Newest SCs
          db: data
          query: >-
            SELECT
              `title` || ' ' || `name` AS name,
              DATE(`appointment-date`) AS date
            FROM sc
            WHERE TRUE
            ORDER BY date DESC
            LIMIT 5
          library: table
          display:
        sc-time:
          title: Number of SCs by time
          db: data
          query: >-
            SELECT
              date(`appointment-date`) as date,
              SUM(COUNT(*)) OVER (ORDER BY `appointment-date`) AS count
            FROM sc
            WHERE TRUE
            GROUP BY date
            ORDER BY date
          library: vega-lite
          display:
            mark: { type: line, tooltip: true }
            encoding:
              x: { field: date, type: temporal, timeUnit: yearmonthdate }
              y: { field: count, type: quantitative }
        sc-organisation:
          title: Number of SCs by organisation
          db: data
          query: >-
            SELECT
              count(*) AS count,
              organisation
            FROM sc
            WHERE TRUE
            GROUP BY organisation
            ORDER BY count ASC
          library: vega-lite
          display:
            mark: { type: bar, tooltip: true }
            encoding:
              y: { field: count, type: quantitative }
              x: { field: organisation, type: nominal }
              color: { field: organisation, type: nominal }
        sc-deceased:
          title: Number of living SCs
          db: data
          query: >-
            SELECT
              count(*) AS count,
              (CASE WHEN deceased = 0 THEN 'Alive' ELSE 'Deceased' END) AS status
            FROM sc
            WHERE TRUE
            GROUP BY deceased
          library: vega-lite
          display:
            mark: { type: arc, tooltip: true }
            encoding:
              theta: { field: count, type: quantitative }
              color: { field: status, type: nominal }
        sc-titles:
          title: SCs by title
          db: data
          query: >-
            SELECT
              count(*) AS count,
              title
            FROM sc
            WHERE TRUE
            GROUP BY title
            ORDER BY count DESC
          library: vega-lite
          display:
            mark: { type: bar, tooltip: true }
            encoding:
              y: { field: count, type: quantitative }
              x: { field: title, type: nominal }
              color: { field: title, type: nominal }
    pdpa:
      title: PDPA Enforcement Statistics
      settings:
        allow_fullscreen: TRUE
      filters:
        date_start:
          name: Date Start
          type: date
          default: "2016-07-01"
        date_end:
          name: Date End
          type: date
      layout:
       - [financial-penalties, enforcement-action-types]
       - [financial-penalties, obligation-types]
       - [enforcement-count, most-recent-enforcement]
       - [total-financial-penalties, highest-financial-penalties]
      charts:
        enforcement-count:
          title: Enforcement action over time
          db: data
          query: >-
            SELECT
              timestamp,
              SUM(COUNT(*)) OVER (
                ORDER BY
                  timestamp ASC
              ) AS count,
              "undertakings" AS type
            FROM
              pdpc_undertakings
            GROUP BY
              timestamp
            UNION
            SELECT
              timestamp,
              SUM(COUNT(*)) OVER (
                ORDER BY
                  timestamp ASC
              ) AS count,
              "decisions" AS type
            FROM
              pdpc_decisions
            WHERE TRUE
              [[ AND timestamp >= date(:date_start) ]]
              [[ AND timestamp <= date(:date_end) ]]
            GROUP BY
              timestamp
            ORDER BY 
              timestamp ASC
          library: vega-lite
          display:
            height: container
            mark: { type: line, point: true, tooltip: true }
            encoding:
              x: { field: timestamp, type: temporal, timeUnit: yearmonthdate }
              y: { field: count, type: quantitative }
              color: { field: type, type: nominal }
        obligation-types:
          title: Number of breaches by obligation
          db: data
          query: >-
            SELECT
              obligation,
              COUNT(*) AS count,
              timestamp
            FROM
              (
                SELECT
                  "Protection" as obligation,
                  title,
                  timestamp
                FROM
                  pdpc_decisions
                WHERE
                  title LIKE "%Protection%"
                UNION
                SELECT
                  "Accountability" as obligation,
                  title,
                  timestamp
                FROM
                  pdpc_decisions
                WHERE
                  title LIKE "%Accountability%"
                  OR title LIKE "%Openness%"
                UNION
                SELECT
                  "Consent" as obligation,
                  title,
                  timestamp
                FROM
                  pdpc_decisions
                WHERE
                  title LIKE "%Consent%"
                UNION
                SELECT
                  "Notification" as obligation,
                  title,
                  timestamp
                FROM
                  pdpc_decisions
                WHERE
                  title LIKE "%Notification%"
                UNION
                SELECT
                  "Purpose Limitation" as obligation,
                  title,
                  timestamp
                FROM
                  pdpc_decisions
                WHERE
                  title LIKE "%Purpose Limitation%"
                UNION
                SELECT
                  "Acccuracy" as obligation,
                  title,
                  timestamp
                FROM
                  pdpc_decisions
                WHERE
                  title LIKE "%Accuracy%"
                UNION
                SELECT
                  "Access and Correction" as obligation,
                  title,
                  timestamp
                FROM
                  pdpc_decisions
                WHERE
                  title LIKE "%Access and Correction%" OR
                  title LIKE "%Access Obligation%" OR
                  EXISTS (
                    SELECT
                      1
                    FROM
                      json_each(tags)
                    WHERE
                      value = 'Access and Correction'
                  )
                UNION
                SELECT
                  "Data Breach Notification" as obligation,
                  title,
                  timestamp
                FROM
                  pdpc_decisions
                WHERE
                  title LIKE "%Data Breach Notification%"
                UNION
                SELECT
                  "Retention Limitation" as obligation,
                  title,
                  timestamp
                FROM
                  pdpc_decisions
                WHERE
                  title LIKE "%Retention Limitation%"
                UNION
                SELECT
                  "Transfer Limitation" as obligation,
                  title,
                  timestamp
                FROM
                  pdpc_decisions
                WHERE
                  title LIKE "%Transfer Limitation%"
              )
            WHERE
              title NOT LIKE "No Breach of%"
              [[ AND timestamp >= date(:date_start) ]]
              [[ AND timestamp <= date(:date_end) ]]
            COLLATE NOCASE
            GROUP BY
              obligation
            ORDER BY
              obligation ASC
          # Other options considered and rejected
          # - SELECT CASE because there can be a breach of multiple obligations
          # Note that relying on tags to determine obligations breached
          # is not reliable
          # See e.g. https://www.pdpc.gov.sg/all-commissions-decisions/2020/11/breach-of-the-consent-and-accountability-obligations-by-majestic-debt-recovery
          library: vega-lite
          display:
            mark: { type: arc, tooltip: true }
            encoding:
              theta: { field: count, type: quantitative }
              color: { field: obligation, type: nominal }
        enforcement-action-types:
          title: Types of enforcement action taken
          db: data
          query: >-
            SELECT
              action,
              COUNT(*) AS count,
              action || " (" || COUNT(*) || ")" AS label
            FROM
              (
                SELECT
                  "Financial Penalty" as action,
                  timestamp
                FROM
                  pdpc_decisions
                WHERE
                  json_extract(financial_penalties, '$.max') > 0
                UNION
                SELECT
                  "Directions" as action,
                  timestamp
                FROM
                  pdpc_decisions
                WHERE
                  EXISTS (
                    SELECT
                      1
                    FROM
                      json_each(tags)
                    WHERE
                      value = 'Directions'
                  )
                UNION
                SELECT
                  "Warning" as action,
                  timestamp
                FROM
                  pdpc_decisions
                WHERE
                  EXISTS (
                    SELECT
                      1
                    FROM
                      json_each(tags)
                    WHERE
                      value = 'Warning' OR
                      value = 'Advisory Notice'
                  )
                UNION
                SELECT
                  "No action" as action,
                  timestamp
                FROM
                  pdpc_decisions
                WHERE
                  EXISTS (
                    SELECT
                      1
                    FROM
                      json_each(tags)
                    WHERE
                      value = 'No Further Action' OR
                      value = 'Not in Breach' OR
                      value = 'No breach'
                  )
                UNION
                SELECT
                  "Undertaking" as action,
                  timestamp
                FROM
                  pdpc_undertakings
                WHERE TRUE
              )
            WHERE TRUE
              [[ AND timestamp >= date(:date_start) ]]
              [[ AND timestamp <= date(:date_end) ]]
            COLLATE NOCASE
            GROUP BY action
            ORDER BY action ASC
          library: vega-lite
          display:
            layer:
              - mark:
                  type: arc
                  tooltip: true
                  innerRadius: 10
                  outerRadius: 40
              - mark: { type: text, radiusOffset: 50 }
                encoding:
                  text: { field: action, type: nominal }
              - mark: { type: text, radiusOffset: 50, dy: 20 }
                encoding:
                  text: { field: count, type: quantitative }
            encoding:
              theta:
                field: count
                type: quantitative
                stack: true
              radius:
                field: count
                scale:
                  type: sqrt
                  zero: true
                  rangeMin: 10
              color: { field: action, type: nominal }
        most-recent-enforcement:
          title: Latest enforcement action
          db: data
          query: >-
            SELECT
              title,
              timestamp
            FROM
              (
                SELECT
                  '<a href="' || url || '">' || title || '</a>' AS title,
                  timestamp
                FROM
                  pdpc_decisions
                UNION
                SELECT
                  '<a href="' || url || '">' || "Undertaking by " || organisation || '</a>' AS title,
                  timestamp
                FROM
                  pdpc_undertakings
              )
            WHERE TRUE
              [[ AND timestamp >= date(:date_start) ]]
              [[ AND timestamp <= date(:date_end) ]]
            ORDER BY
              timestamp DESC
            LIMIT
              10
          library: table
        highest-financial-penalties:
          title: Highest financial penalties
          db: data
          query: >-
            SELECT
              '<a href="' || url || '">' || title || '</a>' AS title,
              json_extract(financial_penalties, '$.max') AS quantum,
              timestamp
            FROM
              pdpc_decisions
            WHERE TRUE
              [[ AND timestamp >= date(:date_start) ]]
              [[ AND timestamp <= date(:date_end) ]]
            ORDER BY quantum DESC
            LIMIT 10
          library: table
        total-financial-penalties:
          title: Total financial penalties imposed over time
          db: data
          query: >- 
            SELECT
              SUM(amount) OVER (
                ORDER BY
                  timestamp ROWS BETWEEN UNBOUNDED PRECEDING
                  AND CURRENT ROW
              ) AS total,
              timestamp
            FROM
              (
                SELECT
                  SUM(json_extract(financial_penalties, '$.sum')) AS amount,
                  timestamp
                FROM
                  pdpc_decisions
                WHERE json_extract(financial_penalties, '$.sum') > 0
                GROUP BY
                  timestamp
                ORDER BY
                  timestamp
              )
            WHERE TRUE
              [[ AND timestamp >= date(:date_start) ]]
              [[ AND timestamp <= date(:date_end) ]]
            ORDER BY
              timestamp
          library: vega-lite
          display:
            encoding:
              x:
                field: timestamp
                type: temporal
                timeUnit: yearmonthdate
              y:
                field: total
                type: quantitative
            mark:
              type: area
              point: true
              line: true
              tooltip: true
        financial-penalties:
          title: Financial penalties over time
          db: data
          query: >-
            SELECT * FROM (
              SELECT
                "raw" AS type,
                json_extract(financial_penalties, '$.max') AS amount,
                date(timestamp) AS timestamp
              FROM
                pdpc_decisions
              WHERE
                amount > 0
              UNION
              SELECT
                "average" AS type,
                AVG(json_extract(financial_penalties, '$.max')) AS average,
                strftime("%Y-06-30", timestamp) AS timestamp
              FROM
                pdpc_decisions
              GROUP BY strftime("%Y", timestamp)
              UNION
              SELECT
                "median" AS type,
                AVG(
                  CASE
                    WHEN row_number IN (
                      row_count / 2 + 1,
                      row_count / 2 + 1 - (row_count % 2 = 0)
                    ) THEN amount
                  END
                ) AS amount,
                timestamp
              FROM
                (
                  SELECT
                    json_extract(financial_penalties, '$.max') AS amount,
                    ROW_NUMBER() OVER (
                      PARTITION BY strftime("%Y", timestamp)
                      ORDER BY
                        json_extract(financial_penalties, '$.max')
                    ) AS row_number,
                    COUNT(*) OVER (PARTITION BY strftime("%Y", timestamp)) AS row_count,
                    strftime("%Y-06-30", timestamp) AS timestamp
                  FROM
                    pdpc_decisions
                  WHERE amount > 0
                )
              GROUP BY
                strftime("%Y", timestamp)
            ) WHERE TRUE
              [[ AND timestamp >= date(:date_start) ]]
              [[ AND timestamp <= date(:date_end) ]]
            ORDER BY timestamp
          library: vega-lite
          display:
            height: container
            autosize:
              resize: true
            encoding:
              x:
                field: timestamp
                type: temporal
                timeUnit: yearmonthdate
              y:
                field: amount
                type: quantitative
                scale:
                  domain: [0, 150000]
                  clamp: true
            layer:
              - mark:
                  type: point
                  shape: cross
                  size: 100
                  filled: true
                  tooltip: true
                encoding:
                  color: { datum: raw }
                transform:
                  - filter: { field: type, equal: raw }
              - mark:
                  type: line
                  point: true
                  tooltip: true
                encoding:
                  color: { datum: median }
                transform:
                  - filter: { field: type, equal: median }
              - mark:
                  type: line
                  point: true
                  tooltip: true
                encoding:
                  color: { datum: average }
                transform:
                  - filter: { field: type, equal: average }
